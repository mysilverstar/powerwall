{"version":3,"sources":["routes/BackupHistory.js","App.js","reportWebVitals.js","index.js"],"names":["secondsToTime","secs","divisor_for_minutes","Math","round","divisor_for_seconds","h","floor","m","s","ceil","timeToString","time","ret","hours","minutes","backupLogs","logs","id","date","BackupHistory","AppBar","position","color","Toolbar","IconButton","edge","className","Typography","variant","Divider","List","ListItem","length","seconds","reduce","sum","getSum","map","log","button","ListItemText","primary","secondary","App","theme","React","useMemo","createTheme","palette","type","ThemeProvider","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64d5879a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport \"./BackupHistory.css\";\r\n\r\nfunction BackupHistory() {\r\n  const getSum = () => {\r\n    const seconds = backupLogs.logs.reduce((sum, { time }) => sum + time, 0);\r\n\r\n    return secondsToTime(seconds).h;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"sticky\" color=\"default\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"menuButton\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            &lt;\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className=\"title\">\r\n            BACKUP HISTORY\r\n          </Typography>\r\n        </Toolbar>\r\n        <Divider />\r\n      </AppBar>\r\n      <List>\r\n        <ListItem className=\"li__summary\">\r\n          <div className=\"li__text\">\r\n            <span>EVENTS</span>\r\n            <span>\r\n              {backupLogs.logs.length}{\" \"}\r\n              <span className=\"li__text_sub\">events</span>\r\n            </span>\r\n          </div>\r\n          <div className=\"li__text\">\r\n            <span>BACKUP POWER</span>\r\n            <span>\r\n              {getSum()}{\" \"}\r\n              <span className=\"li__text_sub\">total backup hours</span>\r\n            </span>\r\n          </div>\r\n        </ListItem>\r\n        <Divider />\r\n        {backupLogs.logs.map((log) => (\r\n          <ListItem button key={log.id} className=\"li__log\">\r\n            <ListItemText className=\"li__text\" primary={log.date} />\r\n            <ListItemText\r\n              className=\"li__text\"\r\n              secondary={timeToString(secondsToTime(log.time))}\r\n            />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </>\r\n  );\r\n}\r\n\r\nconst secondsToTime = (secs) => {\r\n  secs = Math.round(secs);\r\n  var hours = Math.floor(secs / (60 * 60));\r\n\r\n  var divisor_for_minutes = secs % (60 * 60);\r\n  var minutes = Math.floor(divisor_for_minutes / 60);\r\n\r\n  var divisor_for_seconds = divisor_for_minutes % 60;\r\n  var seconds = Math.ceil(divisor_for_seconds);\r\n\r\n  var obj = {\r\n    h: hours,\r\n    m: minutes,\r\n    s: seconds,\r\n  };\r\n  return obj;\r\n};\r\n\r\nconst timeToString = (time) => {\r\n  let ret = \"\";\r\n  const hours = time.h;\r\n  if (hours > 0) {\r\n    ret += hours + \" hour\" + (hours > 1 ? \"s\" : \"\");\r\n  }\r\n  const minutes = time.m;\r\n  if (minutes > 0) {\r\n    ret += \" \" + minutes + \" minute\" + (minutes > 1 ? \"s\" : \"\");\r\n  }\r\n\r\n  return ret;\r\n};\r\n\r\nconst backupLogs = {\r\n  logs: [\r\n    { id: 1, date: \"June 25th\", time: 10 * 60 },\r\n    { id: 2, date: \"June 6th\", time: 3 * 60 },\r\n    { id: 3, date: \"May 31th\", time: 2 * 60 },\r\n    { id: 4, date: \"May 11th\", time: 4131 * 60 },\r\n    { id: 5, date: \"May 6th\", time: 4234 * 60 },\r\n    { id: 6, date: \"April 27th\", time: 31 * 60 },\r\n    { id: 7, date: \"April 21th\", time: 1540 * 60 },\r\n    { id: 8, date: \"April 17th\", time: 2477 * 60 },\r\n    { id: 9, date: \"April 16th\", time: 1011 * 60 },\r\n    { id: 10, date: \"April 16th\", time: 153 * 60 },\r\n    { id: 11, date: \"April 11th\", time: 1 * 60 },\r\n    { id: 12, date: \"March 26th\", time: 25 * 60 },\r\n    { id: 13, date: \"March 20th\", time: 30 * 60 },\r\n    { id: 14, date: \"March 15th\", time: 45 * 60 },\r\n    { id: 15, date: \"March 10th\", time: 38 * 60 },\r\n    { id: 16, date: \"March 8th\", time: 108 * 60 },\r\n    { id: 17, date: \"March 7th\", time: 680 * 60 },\r\n    { id: 18, date: \"March 3rd\", time: 481 * 60 },\r\n    { id: 19, date: \"March 2nd\", time: 52 * 60 },\r\n    { id: 20, date: \"March 1st\", time: 37 * 60 },\r\n  ],\r\n};\r\n\r\nexport default BackupHistory;\r\n","import \"./App.css\";\r\n\r\nimport React from \"react\";\r\nimport { HashRouter, Route } from \"react-router-dom\";\r\nimport BackupHistory from \"./routes/BackupHistory\";\r\nimport { createTheme, ThemeProvider } from '@material-ui/core/styles';\r\n\r\nfunction App() {\r\n\r\n  const theme = React.useMemo(\r\n    () =>\r\n      createTheme({\r\n        palette: {\r\n          type: 'dark',\r\n        },\r\n      }),\r\n    [],\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n    <HashRouter>\r\n      <Route path=\"/\" exact={true} component={BackupHistory} />\r\n    </HashRouter>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}